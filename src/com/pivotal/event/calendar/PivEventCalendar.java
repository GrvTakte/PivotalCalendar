package com.pivotal.event.calendar;

import com.codename1.io.Log;
import com.codename1.ui.Button;
import com.codename1.ui.Container;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.FontImage;
import com.codename1.ui.Label;
import com.codename1.ui.TextField;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.ui.Toolbar;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.FlowLayout;
import com.codename1.ui.table.TableLayout;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class PivEventCalendar {
    private Form current;
    private Resources theme;
    PivCalendarDatabase DatabaseObj = new PivCalendarDatabase();
    PivCalendarModel ModelObj = new PivCalendarModel();
    Label DateLabel;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        
        Toolbar.setGlobalToolbar(true);
        DatabaseObj.createDataBase();
        Log.p("Database process initiated");
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Form pivCalendar = new Form("EventApp",new BoxLayout(BoxLayout.Y_AXIS));
        PivDisplayCalendar PDCObject = new PivDisplayCalendar();
        pivCalendar.add(PDCObject);
        
        
        
        Label Date = new Label("Date: ");
        Date.setUIID("TableStyle");
        Label Event = new Label("Event: ");
        Event.setUIID("TableStyle");
        Label Description = new Label("Description: ");
        Description.setUIID("TableStyle");
        
        DateLabel = new Label("24/02/2017");
        DateLabel.setUIID("TableStyle");
        TextField EventText = new TextField("", "Enter Event Name..");
        EventText.setUIID("TableStyle");
        TextField DescriptionText = new TextField("", "Enter Event Description..");
        DescriptionText.setUIID("TableStyle");
        
        Container container1 = TableLayout.encloseIn(2,Date,DateLabel,Event,EventText,Description,DescriptionText);
        
         Toolbar tb = new Toolbar();
         pivCalendar.setToolBar(tb);
        
         tb.setTitle("EventApp");
         tb.addCommandToOverflowMenu("Event Database", FontImage.createMaterial(FontImage.MATERIAL_DATA_USAGE, UIManager.getInstance().getComponentStyle("Title")), (evt) -> {
         });
         tb.addCommandToOverflowMenu("Event Map", FontImage.createMaterial(FontImage.MATERIAL_MAP, UIManager.getInstance().getComponentStyle("Title")), (evt) -> {
         });
        
         Button add= new Button("Add");
         add.setUIID("AddClear");
         Button clear = new Button("Clear");
         clear.setUIID("AddClear1");
         
        pivCalendar.add(container1);
        pivCalendar.add(add);
        pivCalendar.add(clear);
        pivCalendar.show();
        
        add.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
            DatabaseObj.insertEvent(DateLabel.getText(), EventText.getText(), DescriptionText.getText());
            DatabaseObj.displayEvent();
            }
        });
        
        clear.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
            String demo1 = DatabaseObj.ModelObject.getEventName();
            Log.p(demo1);
            }
        });
        
    }
    
    
    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }

}
