package com.pivotal.event.calendar;

import com.codename1.ui.Container;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.TextField;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.ui.Toolbar;
import com.codename1.ui.table.TableLayout;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class PivEventCalendar {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        Form pivCalendar = new Form(new BoxLayout(BoxLayout.Y_AXIS));
        PivDisplayCalendar PDCObject = new PivDisplayCalendar();
        pivCalendar.add(PDCObject);
        
        
        
        Label Date = new Label("Date: ");
        Date.setUIID("TableStyle");
        Label Event = new Label("Event: ");
        Event.setUIID("TableStyle");
        Label Description = new Label("Description: ");
        Description.setUIID("TableStyle");
        
        Label DateLabel = new Label("","");
        DateLabel.setUIID("TableStyle");
        TextField EventText = new TextField("", "Enter Event Name..");
        EventText.setUIID("TableStyle");
        TextField DescriptionText = new TextField("", "Enter Event Description..");
        DescriptionText.setUIID("TableStyle");
        
        Container container1 = TableLayout.encloseIn(2,Date,DateLabel,Event,EventText,Description,DescriptionText);
        
        pivCalendar.add(container1);
        pivCalendar.show();
    }
    
    
    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }

}
